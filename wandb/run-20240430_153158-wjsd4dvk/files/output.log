Performance Metrics:
Overall Accuracy: 0.48
Average Per Class Accuracy: 0.48
plane : 0.5072754641244355
car : 0.5752634219769193
bird : 0.32608695652173914
cat : 0.3313253012048193
deer : 0.39970022483137646
dog : 0.4042767295597484
frog : 0.595771144278607
horse : 0.5528212776534924
ship : 0.6107080310232674
truck : 0.5467571644042232
Performance Metrics:
Overall Accuracy: 0.56
Average Per Class Accuracy: 0.56
plane : 0.5899397892624184
car : 0.6604365278474661
bird : 0.4119318181818182
cat : 0.39244477911646586
deer : 0.4882588058955783
dog : 0.460125786163522
frog : 0.6578358208955224
horse : 0.6230425055928411
ship : 0.6916437327995997
truck : 0.621543489190548
Performance Metrics:
Overall Accuracy: 0.61
Average Per Class Accuracy: 0.61
plane : 0.6426659976584713
car : 0.7079779227295534
bird : 0.47611989459815546
cat : 0.4380020080321285
deer : 0.5466733283370805
dog : 0.4970230607966457
frog : 0.6927031509121061
horse : 0.668240947883006
ship : 0.7358018513885414
truck : 0.6695156695156695
Performance Metrics:
Overall Accuracy: 0.64
Average Per Class Accuracy: 0.64
plane : 0.6800050175614651
car : 0.7428499749121926
bird : 0.5243330039525692
cat : 0.4740210843373494
deer : 0.5914938795903073
dog : 0.5305031446540881
frog : 0.7229477611940298
horse : 0.6996644295302014
ship : 0.7657618213660246
truck : 0.7065736551030669
Performance Metrics:
Overall Accuracy: 0.67
Average Per Class Accuracy: 0.67
plane : 0.7090316106372303
car : 0.7706472654290015
bird : 0.5646245059288537
cat : 0.5063755020080322
deer : 0.6254309268048963
dog : 0.5614591194968553
frog : 0.7483084577114428
horse : 0.7272184936614466
ship : 0.7884913685263948
truck : 0.7351935646053294
Performance Metrics:
Overall Accuracy: 0.67
Average Per Class Accuracy: 0.67
plane : 0.7090316106372303
car : 0.7706472654290015
bird : 0.5646245059288537
cat : 0.5063755020080322
deer : 0.6254309268048963
dog : 0.5614591194968553
frog : 0.7483084577114428
horse : 0.7272184936614466
ship : 0.7884913685263948
truck : 0.7351935646053294
Performance Metrics:
Overall Accuracy: 0.70
Average Per Class Accuracy: 0.70
plane : 0.734194681384847
car : 0.7930255895634721
bird : 0.60058465085639
cat : 0.5367720883534136
deer : 0.6561329003247565
dog : 0.5883438155136268
frog : 0.7682421227197347
horse : 0.7501035711326539
ship : 0.8083145692602786
truck : 0.7606837606837606
Performance Metrics:
Overall Accuracy: 0.72
Average Per Class Accuracy: 0.72
plane : 0.7557881155472725
car : 0.8112680094616873
bird : 0.6315287972896668
cat : 0.5650458978772231
deer : 0.6841654473430642
dog : 0.6143396226415094
frog : 0.7855721393034826
horse : 0.7706757572529385
ship : 0.8247971693055506
truck : 0.7812253106370753
Performance Metrics:
Overall Accuracy: 0.74
Average Per Class Accuracy: 0.74
plane : 0.7748369292523833
car : 0.8266432513798294
bird : 0.6583498023715415
cat : 0.5928401104417671
deer : 0.7089370472145891
dog : 0.639874213836478
frog : 0.8012748756218906
horse : 0.7889013174248074
ship : 0.8391293470102577
truck : 0.7988624937154349
Traceback (most recent call last):
  File "D:\studia\VI semestr\deep_learning for visual computing\assignment1_mariusz_wojtek\CIFAR10-Trainer\train.py", line 91, in <module>
    train(args)
  File "D:\studia\VI semestr\deep_learning for visual computing\assignment1_mariusz_wojtek\CIFAR10-Trainer\train.py", line 79, in train
    trainer.train()
  File "D:\studia\VI semestr\deep_learning for visual computing\assignment1_mariusz_wojtek\CIFAR10-Trainer\dlvc\trainer.py", line 173, in train
  File "D:\studia\VI semestr\deep_learning for visual computing\assignment1_mariusz_wojtek\CIFAR10-Trainer\dlvc\trainer.py", line 117, in _train_epoch
    outputs = self.model(inputs) # output for restnet [batch_size, 1000], should be [batch_size, 10] for cifar10
              ^^^^^^^^^^^^^^^^^^
  File "C:\Users\wojom\AppData\Local\Programs\Python\Python312\Lib\site-packages\torch\nn\modules\module.py", line 1532, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\wojom\AppData\Local\Programs\Python\Python312\Lib\site-packages\torch\nn\modules\module.py", line 1595, in _call_impl
    hook_result = hook(self, args, result)
                  ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\wojom\AppData\Local\Programs\Python\Python312\Lib\site-packages\wandb\wandb_torch.py", line 110, in <lambda>
    lambda mod, inp, outp: parameter_log_hook(
                           ^^^^^^^^^^^^^^^^^^^
  File "C:\Users\wojom\AppData\Local\Programs\Python\Python312\Lib\site-packages\wandb\wandb_torch.py", line 105, in parameter_log_hook
    self.log_tensor_stats(data.cpu(), "parameters/" + prefix + name)
  File "C:\Users\wojom\AppData\Local\Programs\Python\Python312\Lib\site-packages\wandb\wandb_torch.py", line 205, in log_tensor_stats
    flat = self._remove_infs_nans(flat)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\wojom\AppData\Local\Programs\Python\Python312\Lib\site-packages\wandb\wandb_torch.py", line 296, in _remove_infs_nans
    if not torch.isfinite(tensor).all():
           ^^^^^^^^^^^^^^^^^^^^^^
KeyboardInterrupt